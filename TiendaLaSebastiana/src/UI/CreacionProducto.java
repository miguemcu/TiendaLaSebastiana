/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package UI;

import BusinessLogic.Caja;

import BusinessLogic.EnumTipoProd;
import BusinessLogic.utilJtextField;
import BusinessLogic.Inventario;
import java.time.DateTimeException;
import java.time.LocalDate;
import java.time.Year;
import java.util.ArrayList;
import javax.swing.DefaultComboBoxModel;
import javax.swing.text.AbstractDocument;

public class CreacionProducto extends javax.swing.JFrame {

    private Main parent;
    private Caja caja;

    public Caja getCaja() {
        return caja;
    }

    public void setCaja(Caja caja) {
        this.caja = caja;
    }

    @Override
    public Main getParent() {
        return parent;
    }

    public void setParent(Main parent) {
        this.parent = parent;
    }

    public CreacionProducto() {
    }

    public CreacionProducto(Main parent, Caja caja, Inventario inventario) {
        this.caja = caja;
        this.parent = parent;
        this.parent.getCaja().setInventario(inventario);
        initComponents();
        inicializarComboTipoProd();
        ((AbstractDocument) txtDay.getDocument()).setDocumentFilter(new utilJtextField(2));
        ((AbstractDocument) txtMonth.getDocument()).setDocumentFilter(new utilJtextField(2));
        ((AbstractDocument) txtYear.getDocument()).setDocumentFilter(new utilJtextField(5));
    }

    private void inicializarComboTipoProd() {
        txtTipoProd.setModel(new DefaultComboBoxModel<>(new String[]{
            "Bebida", "Mecato", "Aseo", "Enlatado", "Grano"
        }));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel4 = new javax.swing.JLabel();
        lblID = new javax.swing.JLabel();
        txtID = new javax.swing.JTextField();
        lblNombre = new javax.swing.JLabel();
        txtNombre = new javax.swing.JTextField();
        lblCantidad = new javax.swing.JLabel();
        txtCantidad = new javax.swing.JTextField();
        lblPrecioMayorista = new javax.swing.JLabel();
        txtPrecioMayorista = new javax.swing.JTextField();
        lblPrecio = new javax.swing.JLabel();
        txtPrecio = new javax.swing.JTextField();
        lblTipoProd = new javax.swing.JLabel();
        txtTipoProd = new javax.swing.JComboBox<>();
        btnGuardar = new javax.swing.JToggleButton();
        ScrollMensajesProductos = new javax.swing.JScrollPane();
        txtErrorRegistro = new javax.swing.JTextArea();
        lblFechaVencimiento = new javax.swing.JLabel();
        txtDay = new javax.swing.JTextField();
        txtMonth = new javax.swing.JTextField();
        txtYear = new javax.swing.JTextField();
        lblDia = new javax.swing.JLabel();
        lblMes = new javax.swing.JLabel();
        lblAño = new javax.swing.JLabel();
        txtEtiquetas = new javax.swing.JTextField();
        lblEtiqueta = new javax.swing.JLabel();
        lblIndicacionEtiquetas = new javax.swing.JLabel();
        btnRegresarCreacion = new javax.swing.JButton();

        jLabel4.setText("jLabel4");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        lblID.setText("ID : ");

        txtID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtIDActionPerformed(evt);
            }
        });

        lblNombre.setText("Nombre : ");

        txtNombre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNombreActionPerformed(evt);
            }
        });

        lblCantidad.setText("Cantidad :");

        lblPrecioMayorista.setText("Precio Mayorista :");

        lblPrecio.setText("Precio Menor :");

        txtPrecio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPrecioActionPerformed(evt);
            }
        });

        lblTipoProd.setText("Tipo Producto :");

        txtTipoProd.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Aseo", "Bebida", "Mecato", "Granos", "Enlatado" }));
        txtTipoProd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTipoProdActionPerformed(evt);
            }
        });

        btnGuardar.setText("Guardar");
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });

        ScrollMensajesProductos.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_ALWAYS);
        ScrollMensajesProductos.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);
        ScrollMensajesProductos.setAutoscrolls(true);

        txtErrorRegistro.setColumns(20);
        txtErrorRegistro.setRows(5);
        ScrollMensajesProductos.setViewportView(txtErrorRegistro);

        lblFechaVencimiento.setText("Fecha de Vencimiento : ");

        txtDay.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDayActionPerformed(evt);
            }
        });

        txtMonth.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtMonthActionPerformed(evt);
            }
        });

        lblDia.setText("DD");

        lblMes.setText("MM");

        lblAño.setText("YYYY");

        txtEtiquetas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtEtiquetasActionPerformed(evt);
            }
        });

        lblEtiqueta.setText("Etiqueta :");

        lblIndicacionEtiquetas.setText("#Escriba asi: etiqueta1,etiqueta2,...,etiquetak");

        btnRegresarCreacion.setBackground(new java.awt.Color(247, 84, 73));
        btnRegresarCreacion.setText("Regresar");
        btnRegresarCreacion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegresarCreacionActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblCantidad)
                            .addComponent(lblNombre)
                            .addComponent(lblID, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblTipoProd, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblPrecio, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblFechaVencimiento)
                            .addComponent(lblPrecioMayorista))
                        .addGap(50, 50, 50)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtPrecio, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtID, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtCantidad, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtPrecioMayorista, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtTipoProd, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(txtDay, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGroup(layout.createSequentialGroup()
                                                .addGap(6, 6, 6)
                                                .addComponent(lblDia, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(txtMonth, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(txtYear, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(layout.createSequentialGroup()
                                                .addGap(6, 6, 6)
                                                .addComponent(lblMes, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(27, 27, 27)
                                                .addComponent(lblAño, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addComponent(ScrollMensajesProductos, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblEtiqueta, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnGuardar))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(104, 104, 104)
                                .addComponent(txtEtiquetas, javax.swing.GroupLayout.PREFERRED_SIZE, 233, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 9, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(lblIndicacionEtiquetas, javax.swing.GroupLayout.PREFERRED_SIZE, 272, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap())))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnRegresarCreacion)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblID)
                    .addComponent(txtID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblNombre)
                    .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtCantidad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblCantidad))
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPrecioMayorista)
                    .addComponent(txtPrecioMayorista, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPrecio)
                    .addComponent(txtPrecio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblTipoProd)
                    .addComponent(txtTipoProd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblFechaVencimiento)
                    .addComponent(txtDay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtMonth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtYear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblDia)
                    .addComponent(lblMes)
                    .addComponent(lblAño))
                .addGap(9, 9, 9)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblEtiqueta)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(txtEtiquetas, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblIndicacionEtiquetas)
                            .addComponent(btnGuardar))
                        .addGap(18, 18, 18)
                        .addComponent(ScrollMensajesProductos, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnRegresarCreacion)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtIDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtIDActionPerformed

    private void txtNombreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNombreActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNombreActionPerformed

    private void txtTipoProdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTipoProdActionPerformed

    }//GEN-LAST:event_txtTipoProdActionPerformed

    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed

        try {
            String nombre = txtNombre.getText().trim();
            String id = txtID.getText().trim();
            String Cantidad = txtCantidad.getText().trim();
            String PrecioMayorista = txtPrecioMayorista.getText().trim();
            String Precio = txtPrecio.getText().trim();
            String tipoSeleccionado = (String) txtTipoProd.getSelectedItem();
            String dia = txtDay.getText().trim();
            String mes = txtMonth.getText().trim();
            String annio = txtYear.getText().trim();
            String textoEtiquetas = txtEtiquetas.getText().trim();
            if (nombre.isBlank() || id.isBlank() || Cantidad.isBlank()
                    || PrecioMayorista.isBlank() || Precio.isBlank() || tipoSeleccionado == null
                    || dia.isBlank() || mes.isBlank() || annio.isBlank()) {
                throw new IllegalArgumentException("Todos los campos son obligatorios.");
            }
            if (!nombre.matches("[a-zA-ZáéíóúÁÉÍÓÚñÑ0-9\\s]+")) {
                throw new IllegalArgumentException("El nombre solo puede contener letras y espacios.");
            }

            if (!id.matches("\\d+")) {
                throw new IllegalArgumentException("El ID solo debe contener números.");
            }

            // Verificamos que Cantidad solo contenga números (y opcionalmente punto decimal)
            if (!Cantidad.matches("\\d+(\\.\\d+)?")) {
                throw new IllegalArgumentException("La cantidad debe ser un número válido.");
            }

            // Verificamos que Precio Mayor solo contenga números (y opcionalmente punto decimal)
            if (!PrecioMayorista.matches("\\d+(\\.\\d+)?")) {
                throw new IllegalArgumentException("El precio mayor debe ser un número válido.");
            }

            // Verificamos que Precio Menor solo contenga números (y opcionalmente punto decimal)
            if (!Precio.matches("\\d+(\\.\\d+)?")) {
                throw new IllegalArgumentException("El precio menor debe ser un número válido.");
            }
            if (!dia.matches("\\d+")) {
                throw new IllegalArgumentException("El día solo debe contener números.");
            }
            if (!mes.matches("\\d+")) {
                throw new IllegalArgumentException("El mes solo debe contener números.");
            }
            if (!annio.matches("\\d+")) {
                throw new IllegalArgumentException("El año solo debe contener números.");
            }
            if (!textoEtiquetas.isBlank() && !textoEtiquetas.matches("[a-zA-ZáéíóúÁÉÍÓÚñÑ\\s,]*")) {
                throw new IllegalArgumentException("Las etiquetas solo puede contener letras y espacios.");
            }

            long Id = Long.parseLong(id);
            double cantidad = Double.parseDouble(Cantidad);
            double precio = Double.parseDouble(Precio);
            double precioMayorista = Double.parseDouble(PrecioMayorista);
            EnumTipoProd tiposeleccionado = EnumTipoProd.ASEO;

            if (this.capturarFechaVencimiento() == null) {
                txtErrorRegistro.setText("Fecha inválida. Por favor ingrese de nuevo.");
                return;
            }

            LocalDate fechaVencimiento = this.capturarFechaVencimiento();

            ArrayList<String> etiquetas = new ArrayList<>();
            String[] etiquetasArray = textoEtiquetas.split(",");
            for (String etiqueta : etiquetasArray) {
                etiquetas.add(etiqueta.trim());
            }
            if (precio < precioMayorista) {
                throw new IllegalArgumentException("El precio por mayor debe ser menor o igual al precio por menor.");
            }

            if (Integer.parseInt(txtYear.getText().trim()) < Year.now().getValue()) {
                throw new IllegalArgumentException("La fecha de vencimiento es incorrecta.");
            }
            this.getCaja().getInventario().crearProductos(tipoSeleccionado, nombre, Id, precio,
                    precioMayorista, fechaVencimiento, etiquetas, cantidad);
            this.dispose();
            InventarioSistema inventarioSistema = new InventarioSistema(parent);
            inventarioSistema.setVisible(true);

        } catch (IllegalArgumentException ex) {
            txtErrorRegistro.setText(ex.getMessage());
        } catch (Exception ex) {
            txtErrorRegistro.setText("Error inesperado: " + ex.getMessage());
        }
    }//GEN-LAST:event_btnGuardarActionPerformed

    public LocalDate capturarFechaVencimiento() {
        String yearStr = txtYear.getText().trim();
        String monthStr = txtMonth.getText().trim();
        String dayStr = txtDay.getText().trim();

        LocalDate fechaVencimiento = null;

        try {
            if (yearStr.isBlank() || monthStr.isBlank() || dayStr.isBlank()) {
                throw new IllegalArgumentException("Todos los campos de la fecha de vencimiento son obligatorios.");
            }

            int year = Integer.parseInt(yearStr);
            int month = Integer.parseInt(monthStr);
            int day = Integer.parseInt(dayStr);

            fechaVencimiento = LocalDate.of(year, month, day);
            txtErrorRegistro.setText("");

        } catch (NumberFormatException e) {
            System.err.println("Error: Debe ingresar valores numéricos válidos para la fecha de vencimiento.");
        } catch (DateTimeException e) {
            System.err.println("Fecha de vencimiento inválida: " + e.getMessage());
            txtErrorRegistro.setText("Error: Fecha de vencimiento inválida - " + e.getMessage());
        } catch (IllegalArgumentException e) {
            System.err.println(e.getMessage());
        } catch (Exception ex) {
            System.err.println("Error inesperado al capturar la fecha de vencimiento: " + ex.getMessage());
        }

        return fechaVencimiento;
    }
    private void txtDayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDayActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDayActionPerformed

    private void txtMonthActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtMonthActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtMonthActionPerformed

    private void txtEtiquetasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtEtiquetasActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtEtiquetasActionPerformed

    private void btnRegresarCreacionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegresarCreacionActionPerformed
        this.dispose();
    }//GEN-LAST:event_btnRegresarCreacionActionPerformed

    private void txtPrecioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPrecioActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPrecioActionPerformed

    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane ScrollMensajesProductos;
    private javax.swing.JToggleButton btnGuardar;
    private javax.swing.JButton btnRegresarCreacion;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel lblAño;
    private javax.swing.JLabel lblCantidad;
    private javax.swing.JLabel lblDia;
    private javax.swing.JLabel lblEtiqueta;
    private javax.swing.JLabel lblFechaVencimiento;
    private javax.swing.JLabel lblID;
    private javax.swing.JLabel lblIndicacionEtiquetas;
    private javax.swing.JLabel lblMes;
    private javax.swing.JLabel lblNombre;
    private javax.swing.JLabel lblPrecio;
    private javax.swing.JLabel lblPrecioMayorista;
    private javax.swing.JLabel lblTipoProd;
    private javax.swing.JTextField txtCantidad;
    private javax.swing.JTextField txtDay;
    private javax.swing.JTextArea txtErrorRegistro;
    private javax.swing.JTextField txtEtiquetas;
    private javax.swing.JTextField txtID;
    private javax.swing.JTextField txtMonth;
    private javax.swing.JTextField txtNombre;
    private javax.swing.JTextField txtPrecio;
    private javax.swing.JTextField txtPrecioMayorista;
    private javax.swing.JComboBox<String> txtTipoProd;
    private javax.swing.JTextField txtYear;
    // End of variables declaration//GEN-END:variables
}
